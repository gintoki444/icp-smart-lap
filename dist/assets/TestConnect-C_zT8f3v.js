import{r as n,j as r}from"./index-BnqE3Rwp.js";const R=()=>{const[s,x]=n.useState(null),[m,g]=n.useState(null),[E,S]=n.useState(null),[b,w]=n.useState([]),[d,j]=n.useState(!1),[v,C]=n.useState(""),[L,f]=n.useState(""),[y,k]=n.useState("");n.useEffect(()=>()=>{s&&s.close().catch(e=>console.error("Error closing port:",e))},[s]);const N=async()=>{try{const e=await navigator.serial.requestPort();await e.open({baudRate:9600}),x(e),j(!0),T(e);const t=new TextDecoderStream,u=e.readable.pipeThrough(t).getReader();let a="",c="Unknown Device";for(;;){const{value:h,done:i}=await u.read();if(i)break;if(h){a+=h;let o=a.split(`
`);for(;o.length>1;){const l=o.shift().trim();l.startsWith("DEVICE_NAME:")?(c=l.replace("DEVICE_NAME:","").trim(),console.log(`Connected to ${c}`),C(c)):w(F=>[...F,`${c}: ${l}`])}a=o.join(`
`)}}}catch(e){console.error("Error connecting to device:",e)}},T=async e=>{console.log("Reading from serial port...");try{const t=new TextDecoderStream,p=e.readable.pipeThrough(t);S(p);const u=p.getReader();g(u);let a="";for(;;){const{value:c,done:h}=await u.read();if(h)break;if(c){a+=c;let i=a.split(`
`);for(;i.length>1;){const o=i.shift().trim();o&&(k(o),w(l=>[...l,`Arduino: ${o}`]),o.includes("1")?(console.log("Status from Arduino: LED ON"),f("LED ON")):o.includes("0")&&(console.log("Status from Arduino: LED OFF"),f("LED OFF")))}a=i.join(`
`)}}}catch(t){console.error("Error reading from serial port:",t)}},D=async e=>{try{if(!s)throw new Error("Port is not connected.");const t=s.writable.getWriter();await t.write(new TextEncoder().encode(e+`
`)),t.releaseLock()}catch(t){console.error("Error sending command:",t)}},A=async()=>{try{m&&(await m.cancel().catch(e=>console.error("Error cancelling reader:",e)),m.releaseLock()),E&&await E.cancel().catch(e=>console.error("Error cancelling stream:",e)),s&&await s.close().catch(e=>console.error("Error closing port:",e)),x(null),g(null),S(null),j(!1),f(""),console.log("Serial port disconnected.")}catch(e){console.error("Error disconnecting serial port:",e)}};return r.jsxs("div",{children:[r.jsx("h2",{children:v}),r.jsx("div",{children:"********************"}),r.jsx("h2",{children:"Arduino Serial Communication"}),r.jsx("button",{onClick:N,disabled:d,children:"Connect"}),r.jsx("button",{onClick:A,disabled:!d,children:"Disconnect"}),r.jsx("button",{onClick:()=>D("A"),disabled:!d,children:"Turn ON LED"}),r.jsx("button",{onClick:()=>D("B"),disabled:!d,children:"Turn OFF LED"}),r.jsxs("div",{children:[r.jsxs("h3",{children:["LED Status: ",L]}),"LED Value: ",r.jsx("input",{type:"text",value:y,readOnly:!0})]}),r.jsxs("div",{children:[r.jsx("h3",{children:"Messages:"}),r.jsxs("div",{style:{border:"1px solid black",padding:"10px",height:"200px",overflowY:"auto"},children:[b,b.map((e,t)=>r.jsx("p",{children:e},t))]})]})]})};export{R as default};
